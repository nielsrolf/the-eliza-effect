[{"/Users/nielswarncke/Documents/art/eliza-effect-dresden/backend/frontend/src/index.js":"1","/Users/nielswarncke/Documents/art/eliza-effect-dresden/backend/frontend/src/App.js":"2","/Users/nielswarncke/Documents/art/eliza-effect-dresden/backend/frontend/src/hooks/useMidiDevice.js":"3","/Users/nielswarncke/Documents/art/eliza-effect-dresden/backend/frontend/src/components/Modal.js":"4","/Users/nielswarncke/Documents/art/eliza-effect-dresden/backend/frontend/src/hooks/useAudioDevice.js":"5","/Users/nielswarncke/Documents/art/eliza-effect-dresden/backend/frontend/src/screens/SettingsScreen.js":"6","/Users/nielswarncke/Documents/art/eliza-effect-dresden/backend/frontend/src/hooks/useMidi.js":"7","/Users/nielswarncke/Documents/art/eliza-effect-dresden/backend/frontend/src/screens/AudioScreen.js":"8","/Users/nielswarncke/Documents/art/eliza-effect-dresden/backend/frontend/src/hooks/useMidiOutput.js":"9","/Users/nielswarncke/Documents/art/eliza-effect-dresden/backend/frontend/src/components/Switch.js":"10","/Users/nielswarncke/Documents/art/eliza-effect-dresden/backend/frontend/src/utils/constants.js":"11","/Users/nielswarncke/Documents/art/eliza-effect-dresden/backend/frontend/src/components/SelectStory.js":"12","/Users/nielswarncke/Documents/art/eliza-effect-dresden/backend/frontend/src/components/SelectPath.js":"13","/Users/nielswarncke/Documents/art/eliza-effect-dresden/backend/frontend/src/components/TextVersion.js":"14"},{"size":541,"mtime":1661041311285,"results":"15","hashOfConfig":"16"},{"size":1835,"mtime":1661854142448,"results":"17","hashOfConfig":"16"},{"size":394,"mtime":1661041311288,"results":"18","hashOfConfig":"16"},{"size":1049,"mtime":1661081457345,"results":"19","hashOfConfig":"16"},{"size":1071,"mtime":1661523444647,"results":"20","hashOfConfig":"16"},{"size":1557,"mtime":1661041311286,"results":"21","hashOfConfig":"16"},{"size":1785,"mtime":1661041311287,"results":"22","hashOfConfig":"16"},{"size":8678,"mtime":1662555474915,"results":"23","hashOfConfig":"16"},{"size":832,"mtime":1661854142450,"results":"24","hashOfConfig":"16"},{"size":402,"mtime":1661041311286,"results":"25","hashOfConfig":"16"},{"size":134,"mtime":1661762528893,"results":"26","hashOfConfig":"16"},{"size":970,"mtime":1661529138364,"results":"27","hashOfConfig":"16"},{"size":2007,"mtime":1662017659435,"results":"28","hashOfConfig":"16"},{"size":351,"mtime":1661802195732,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"e3ckg3",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/nielswarncke/Documents/art/eliza-effect-dresden/backend/frontend/src/index.js",[],["63","64"],"/Users/nielswarncke/Documents/art/eliza-effect-dresden/backend/frontend/src/App.js",["65"],"import styled from '@emotion/styled'\nimport BasicModal from './components/Modal';\nimport useAudioDevice from './hooks/useAudioDevice';\nimport useMidiDevice from './hooks/useMidiDevice';\nimport SettingsScreen from './screens/SettingsScreen';\nimport SelectStory from './components/SelectStory';\nimport SelectPath from './components/SelectPath';\nimport AudioScreen from './screens/AudioScreen';\nimport TextVersion from './components/TextVersion';\nimport {useState} from 'react';\n\n\n// import Medias from './medias.json'\n\n\nfunction App() {\n\n  // const files = [\n  //   ...Array(10).fill({src:'', name: ''}).map(\n  //   (file, index) => ({ src:`assets/L${index+1}.wav`, output: 101 }) ), \n  //   ...Array(1).fill({ src:'assets/C1.wav', output: 105 })\n  // ];\n\n  // const files = [\n  //   {src: 'assets/L1.wav', output: 101},\n  //   {src: 'assets/L2.wav', output: 102},\n  //   {src: 'assets/L3.wav', output: 103},\n  //   {src: 'assets/L4.wav', output: 104},\n  //   {src: 'assets/L5.wav', output: 105},\n  //   {src: 'assets/L6.wav', output: 106},\n  // ]\n\n  const AudioDevice = useAudioDevice() \n  const MidiDevice = useMidiDevice()\n  const [story, setStory] = useState({medias: [], path: \"data/cowboy_dream/generated/medias.json\"});\n  const [available, setAvailable] = useState([]);\n\n  return (<>\n    <SelectPath setStory={setStory} available={available} setAvailable={setAvailable}/>\n    <SelectStory setStory={setStory} story={story}/>\n    <AudioScreen story={story} setStory={setStory} midiOutput={MidiDevice.midiOutput}/>\n    <TextVersion story={story} />\n    <BasicModal title='Settings'>          \n      <SettingsScreen {...AudioDevice} {...MidiDevice} />\n    </BasicModal>\n    </>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\nwidth: 100%;\nmin-height: 100vh;\n\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n`\n","/Users/nielswarncke/Documents/art/eliza-effect-dresden/backend/frontend/src/hooks/useMidiDevice.js",[],"/Users/nielswarncke/Documents/art/eliza-effect-dresden/backend/frontend/src/components/Modal.js",[],"/Users/nielswarncke/Documents/art/eliza-effect-dresden/backend/frontend/src/hooks/useAudioDevice.js",[],"/Users/nielswarncke/Documents/art/eliza-effect-dresden/backend/frontend/src/screens/SettingsScreen.js",[],"/Users/nielswarncke/Documents/art/eliza-effect-dresden/backend/frontend/src/hooks/useMidi.js",["66"],"import { useState, useEffect } from 'react';\n\n\nexport const useMIDI = () => {\n  const [connections, setConnections] = useState(\n    { inputs: [], outputs: [] }\n  );\n  const navigatorExists = typeof navigator !== 'undefined';\n  const hasMIDI = Boolean(\n    navigatorExists && navigator && navigator.requestMIDIAccess\n  );\n  useEffect(() => {\n    if (hasMIDI) {\n      navigator.requestMIDIAccess().then((access: any) => {\n        setConnections({\n          inputs: enrichInputs(Array.from(access.inputs.values())),\n          outputs: Array.from(access.outputs.values()),\n        });\n        access.onstatechange = () => {\n          setConnections({\n            inputs: enrichInputs(Array.from(access.inputs.values())),\n            outputs: Array.from(access.outputs.values()),\n          });\n        };\n      });\n    }\n  }, []);\n  return {\n    inputs: connections.inputs,\n    outputs: connections.outputs,\n    hasMIDI,\n  };\n};\n\n// Listeners can be added/deleted from individual inputs.\n// This allows an input to have multiple 'onmidimessage' functions instead of setting/resetting one\nconst enrichInputs = (inputs: any[]) =>\n  // Remeber that this is only adding properties to the input object, not really returning a new object.\n  // This is a side effect that may present bugs/complications down the line.\n  inputs.map((input: any) => {\n    input.clockListeners = input.clockListeners || {};\n    input.noteOnListeners = input.noteOnListeners || {};\n    input.noteOffListeners = input.noteOffListeners || {};\n    input.controlListeners = input.controlListeners || {};\n    input.messageListeners = input.messageListeners || {};\n    // input.onmidimessage = handleMIDIMessage; // This adds a listener by default, opening the connection and listening to every input\n    return input;\n  });","/Users/nielswarncke/Documents/art/eliza-effect-dresden/backend/frontend/src/screens/AudioScreen.js",["67","68","69","70","71","72","73"],"import styled from \"@emotion/styled\";\nimport { Button, Slider } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport Switch from \"../components/Switch\";\nimport { useMIDIOutput } from \"../hooks/useMidiOutput\";\n\n// 0 db\nconst MAX_VOLUME = 104;\n\n\nconst outputs = {\n  \"Luzia\": 104,\n  \"Marin\": 106,\n  \"Kriemhild\": 108,\n  \"LUZIA\": 104,\n  \"MARIN\": 106,\n  \"KRIEMHILD\": 108,\n  \"Alle\": \"all\",\n  \"ALL\": \"all\",\n  \"ALLE\": \"all\",\n  \"All\": \"all\",\n  \"all\": \"all\",\n}\n\n\nconst AudioScreen = props => {\n    let { story, setStory, midiOutput } = props;\n\n    const placeholder = { src: \"\", text: \"\", output: 0, media: \"none\", actor: \"\", raw: \"\", output: \"\" };\n    let files = story.medias.length > 0 ? story.medias : [placeholder];\n  \n    const { cc } = useMIDIOutput(midiOutput);\n    const [ selectedOutput, setSelectedOutput ] = useState({ name: 'default' });\n  \n    const [ currentFile_, setCurrentFile ] = useState(0);\n    const [ AutoPlay, setAutoPlay ] = useState(false)\n    const currentFile = currentFile_ > files.length - 1 ? 0 : currentFile_;\n    const [isLoading, setIsLoading] = useState(false);\n    const [playbackRate, setPlaybackRate] = useState(100);\n\n    console.log(\"autoPlay\", AutoPlay)\n\n\n    const changeAudioSpeed = (event) => {\n      document.getElementById('track01').playbackRate = event.target.value / 100;\n      setPlaybackRate(event.target.value);\n    }\n\n    const playVideo = async (part) => {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(part)\n      };\n      const response = await fetch(`http://localhost:5000/play/`, requestOptions).then(res => {\n        setTimeout(handleNext, 1000 * part.duration);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n    function handleKeyPress(e) {\n        console.log( \"You pressed a key.\" );\n        console.log(e);\n    }\n    \n    useEffect(()=>{\n      \n      const AudioElement = document.getElementById('track01');\n\n      AudioElement.playbackRate = playbackRate / 100;\n      function handleOutputChange(actor){\n        console.log(\"output changed to: \", outputs[actor]);\n        if (!actor) return;\n\n        if(outputs[actor]===\"all\") {\n          for(let i = 104; i <= 109; i++){\n            cc(MAX_VOLUME, i, 9);\n          }\n          // setSelectedOutput(channel);\n          return\n        }\n        // mute all channels\n        for(let i = 104; i <= 109; i++){\n          cc(0, i, 9);\n        }\n        for(let singleActor of actor.split(\"+\")){\n          // set selected channel to max volume\n          let channel = outputs[singleActor];\n          cc(MAX_VOLUME, channel, 9);\n          cc(MAX_VOLUME, channel + 1, 9);\n          // setSelectedOutput(channel); \n        }\n      }\n      \n      if(files[currentFile].src){\n        handleOutputChange(files[currentFile].actor)\n        document.getElementById(files[currentFile]?.src).scrollIntoView({behavior: \"smooth\", block: \"center\"});\n        if (!AutoPlay) return;\n        if(files[currentFile].media==='audio'){\n          AudioElement.play();\n        }\n      }\n      if(files[currentFile].media==='video'){\n        playVideo(files[currentFile])\n      }\n    },[currentFile, AutoPlay])\n\n\n    function handleNextOffset(offset){\n      console.log(\"habndlenext\", currentFile)\n      let nextFile = currentFile + offset;\n      while(nextFile < files.length && files[nextFile].media==='none'){\n        nextFile = nextFile + 1;\n      }\n      if(nextFile >= files.length){\n        nextFile = files.length - 1;\n      }\n      if(files[nextFile].media==='stop') {\n        setAutoPlay(false);\n      }\n      setCurrentFile(nextFile);\n      document.getElementById('track01').playbackRate = playbackRate / 100;\n      if(files[nextFile].media===\"break\") {\n        let seconds = parseInt(files[nextFile].text);\n        setTimeout(() => handleNextOffset(offset + 1), seconds * 1000)\n      }\n    }\n\n    function handleNext() {\n      handleNextOffset(1);\n    }\n\n\n    function handlePrevious(){\n      let previous = currentFile - 1;\n      while(previous >= 0 && files[previous].media==='none'){\n        previous = previous - 1;\n      }\n      if(previous < 0){\n        previous = 0;\n      }\n      setCurrentFile(previous);\n    }\n\n    function updateActor(idx, actor) {\n      files[idx].actor = actor;\n      files[idx].src = \"\";\n      setStory({...story, medias: files});\n    }\n\n    function updateText(idx, text) {\n      files[idx].text = text;\n      files[idx].src = \"\";\n      setStory({...story, medias: files});\n    }\n\n    function updateMedia(idx, media) {\n      files[idx].media = media;\n      files[idx].src = \"\";\n      setStory({...story, medias: files});\n    }\n\n    function deletePart(idx) {\n      files.splice(idx, 1);\n      setStory({...story, medias: files});\n    }\n\n    function insertEmptyMediaAfter(idx) {\n      files.splice(idx + 1, 0, placeholder);\n      console.log(files);\n      setStory({...story, medias: files});\n    }\n    \n    const saveStory = async () => {\n  \n      try {\n        setIsLoading(true);\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(props.story, null, 4)\n        };\n        const response = await fetch('http://localhost:5000/save', requestOptions);\n  \n        if (!response.ok) {\n          throw new Error(`Error! status: ${response.status}`);\n        }\n  \n        const result = await response.json();\n        \n        setStory(result);\n      } catch (err) {\n        console.log(err)\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    const currentMedia = files.length > 0 ? files[currentFile] : {src: null, media: 'None'};\n    const isAudio = currentMedia.media === 'audio';\n    const isVideo = currentMedia.media === 'video';\n  \n    return <Container>\n      <div  style={{position: 'absolut', bottom: 0}} >\n        <audio controls style={{\n            width: '420px', height: '15px',\n            display: isAudio ? 'inline' : 'none'\n          }}\n          onEnded={handleNext}\n          src={`http://localhost:5000/assets/${currentMedia.src}`}\n          id='track01'\n          playbackRate={playbackRate / 100}\n          >  \n        </audio>\n        Speed: <Slider aria-label=\"Speed\" value={playbackRate } onChange={changeAudioSpeed} min={50}  max={150}  style={{\n            width: '420px', height: '15px'\n          }} size=\"small\"  valueLabelDisplay=\"auto\"/>\n        <Button children='Play video' size='small' onClick={(event) => playVideo(currentMedia)}\n          style={{\n            display: isVideo ? 'block' : 'none'\n          }} />\n        <div style={{display: 'flex', width: '100%', justifyContent: 'center'}}>\n          <Button children='<' size='small' onClick={handlePrevious} disabled={!currentFile} />\n          <Button children='>' onClick={handleNext} />\n        </div>\n      </div>\n\n      <FileListContainer>\n        {\n          files.map((file, idx) =>\n            <FileListItem id={file.src} isActive={idx === currentFile} key={idx}>\n              <Button onClick={()=>setCurrentFile(idx)}>Select</Button>\n              <input type=\"text\" name=\"actor\" value={file.actor} onChange={(event) => updateActor(idx, event.target.value)}/>:\n              <input type=\"text\" name=\"media\" value={file.media} onChange={(event) => updateMedia(idx, event.target.value)}/>\n              <textarea name=\"src\" value={file.text} style={{width: \"100%\"}} onChange={(event) => updateText(idx, event.target.value)}/>\n\n              <div style={{display: isLoading ? 'none' : 'block'}} >\n                <Button onClick={saveStory}>Update</Button>\n                <Button onClick={() => {insertEmptyMediaAfter(idx)}}>Insert</Button>\n                <Button onClick={() => {deletePart(idx)}}>Delete</Button>\n                <Button onClick={() => {playVideo(file)}} style={{display: file.media===\"video\" ? \"inline\" : \"none\"}}>Play</Button>\n                Autplay: \n                <input\n                  type=\"checkbox\"\n                  checked={AutoPlay}\n                  onChange={() => setAutoPlay(!AutoPlay)}\n                  playbackRate=\"0.5\"\n                />\n              </div>\n\n            </FileListItem>\n            \n          )\n        }\n      </FileListContainer>\n    </Container>\n  }\n\n  export default AudioScreen\n\n  const Container = styled.div`\n    width: 90%;\n    padding: 1em;\n  `\n  const FileListContainer = styled.div`\n    width: 100%;\n    max-height: 70vh;\n    overflow-y: scroll;\n    overflow-x: hidden;\n `\n  const FileListItem = styled.p`\n    cursor: pointer;\n    width: 100%;\n    padding: 0.5em;\n    background-color: ${props => props.isActive ? '#202020' : '#353535'};\n  `","/Users/nielswarncke/Documents/art/eliza-effect-dresden/backend/frontend/src/hooks/useMidiOutput.js",[],"/Users/nielswarncke/Documents/art/eliza-effect-dresden/backend/frontend/src/components/Switch.js",[],"/Users/nielswarncke/Documents/art/eliza-effect-dresden/backend/frontend/src/utils/constants.js",[],"/Users/nielswarncke/Documents/art/eliza-effect-dresden/backend/frontend/src/components/SelectStory.js",[],"/Users/nielswarncke/Documents/art/eliza-effect-dresden/backend/frontend/src/components/SelectPath.js",["74","75","76"],"import { Button } from \"@mui/material\";\nimport {useState, useEffect} from 'react';\n\n\nfunction SelectPath(props) {\n  const {setStory, available, setAvailable} = props;\n  console.log(available)\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [err, setErr] = useState('');\n  \n  const setSelectedPath = async (event) => {\n    console.log(event);\n    // setStory({...story, path: event.target.value});\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ path: event.target.value }, null, 4)\n    };\n    const response = await fetch('http://localhost:5000/open', requestOptions);\n\n    if (!response.ok) {\n    throw new Error(`Error! status: ${response.status}`);\n    }\n\n    const result = await response.json();\n\n    console.log('result is: ', JSON.stringify(result, null, 4));\n\n    setStory(result);\n  }\n\n  useEffect(() => {\n    const fetchAvailable = async () => {\n    // if(available.length > 0) return;\n        try{\n            setIsLoading(true);\n            const requestOptions = {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json' },\n            };\n            const response = await fetch('http://localhost:5000/available', requestOptions);\n\n            if (!response.ok) {\n                throw new Error(`Error! status: ${response.status}`);\n            }\n\n            const result = await response.json();\n\n            console.log('result is: ', JSON.stringify(result, null, 4));\n\n            setAvailable(result);\n        } catch (err) {\n            setErr(err.message);\n        } finally {\n            setIsLoading(false);\n        }\n    }\n    if(available.length === 0) fetchAvailable();\n  } , [available]);\n\n\n  return (\n    <form>\n      {\n        available.map((file) =>\n            <Button value={file} onClick={setSelectedPath} key={file}>{file.split(\"data/\")[1].split(\".\")[0]}</Button>\n        )\n    }\n    </form>\n  )\n}\n\nexport default SelectPath;\n\n\n","/Users/nielswarncke/Documents/art/eliza-effect-dresden/backend/frontend/src/components/TextVersion.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":52,"column":7,"nodeType":"83","messageId":"84","endLine":52,"endColumn":16},{"ruleId":"85","severity":1,"message":"86","line":27,"column":6,"nodeType":"87","endLine":27,"endColumn":8,"suggestions":"88"},{"ruleId":"81","severity":1,"message":"89","line":4,"column":8,"nodeType":"83","messageId":"84","endLine":4,"endColumn":14},{"ruleId":"90","severity":1,"message":"91","line":29,"column":92,"nodeType":"92","messageId":"93","endLine":29,"endColumn":98},{"ruleId":"81","severity":1,"message":"94","line":33,"column":13,"nodeType":"83","messageId":"84","endLine":33,"endColumn":27},{"ruleId":"81","severity":1,"message":"95","line":33,"column":29,"nodeType":"83","messageId":"84","endLine":33,"endColumn":46},{"ruleId":"81","severity":1,"message":"96","line":55,"column":13,"nodeType":"83","messageId":"84","endLine":55,"endColumn":21},{"ruleId":"81","severity":1,"message":"97","line":62,"column":14,"nodeType":"83","messageId":"84","endLine":62,"endColumn":28},{"ruleId":"85","severity":1,"message":"98","line":107,"column":7,"nodeType":"87","endLine":107,"endColumn":30,"suggestions":"99"},{"ruleId":"81","severity":1,"message":"100","line":9,"column":10,"nodeType":"83","messageId":"84","endLine":9,"endColumn":19},{"ruleId":"81","severity":1,"message":"101","line":10,"column":10,"nodeType":"83","messageId":"84","endLine":10,"endColumn":13},{"ruleId":"85","severity":1,"message":"102","line":60,"column":7,"nodeType":"87","endLine":60,"endColumn":18,"suggestions":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'Container' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'hasMIDI'. Either include it or remove the dependency array.","ArrayExpression",["106"],"'Switch' is defined but never used.","no-dupe-keys","Duplicate key 'output'.","ObjectExpression","unexpected","'selectedOutput' is assigned a value but never used.","'setSelectedOutput' is assigned a value but never used.","'response' is assigned a value but never used.","'handleKeyPress' is defined but never used.","React Hook useEffect has missing dependencies: 'cc', 'files', 'playVideo', and 'playbackRate'. Either include them or remove the dependency array.",["107"],"'isLoading' is assigned a value but never used.","'err' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setAvailable'. Either include it or remove the dependency array.",["108"],"no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [hasMIDI]",{"range":"115","text":"116"},"Update the dependencies array to be: [currentFile, AutoPlay, playbackRate, files, cc, playVideo]",{"range":"117","text":"118"},"Update the dependencies array to be: [available, setAvailable]",{"range":"119","text":"120"},[821,823],"[hasMIDI]",[3196,3219],"[currentFile, AutoPlay, playbackRate, files, cc, playVideo]",[1747,1758],"[available, setAvailable]"]